# TUTORIAL6 PROPERTIES FILE
# The values in this file are the defualt values unless they are overriden by command-line arguments

#GENERAL
# Population size tells the initialiser module how many individuals to create in the population.
population_size = 10
# generations
generations = 2
# How many times the genotype is allowed to wrap
max_wraps = 1

#INITIALISATION - Specifies which module to use as an initialiser. In this case Operator.Initialiser is used, it's the basic model which initialises with completely random integer strings. See the API for details of other initialisation options.
initialiser = geva.Operator.Initialiser
# The chromosomes are variable length structures and can grow and shrink as due to mutation and crossover. For completly random initialisation an initial chromosome length needs to be specified. The initialiser will random create integer strings in this case of length 200
initial_chromosome_size = 200

#CROSSOVER 
# Probability of crossover. State if the point of crossover is fixed on both chromosomes (The size will always be the same) or not
crossover_probability = 0.9
fixed_point_crossover = true

#MUTATION
# Probability of mutating
mutation_probability = 0.05

#REPLACEMENT
replacement_type = steady_state

#INITIALISATION
initialiser = geva.Operator.Initialiser
initial_chromosome_size = 200

#SELECTION
selection_operation = geva.Operator.Operations.TournamentSelect
tournament_size = 3

# Symbolic Regression grammar (In groovy)
grammar_file = src/main/resources/param/Grammar/sr_grammar_gr.bnf

#FITNESS FUNCTIONS
# Fitness function requires the full package name
# Symbolic regression (Interpreting via BSF)
fitness_function = geva.FitnessEvaluation.SymbolicRegression.SymbolicRegressionBSF

